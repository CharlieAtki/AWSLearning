version: '3.8'

services:
  js-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    networks:
      - appnet
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  js-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_URL: http://localhost:3000
    restart: unless-stopped
    init: true
    ports:
      - "4173:4173"
    env_file:
      - ./frontend/.env
    networks:
      - appnet
    environment:
      - NODE_ENV=production
    depends_on:
      js-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  js-ai-service:
    build:
      context: ./ai-mcp-service
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    networks:
      - appnet
    env_file:
      - ./ai-mcp-service/.env
    environment:
      - EXPRESS_BASE_URL=http://js-backend:3000
    depends_on:
      js-backend:
        condition: service_healthy
    ports:
      - "8000:8000"

  ai-agent-service:
    build:
      context: ./ai-agent-service
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    ports:
      - "5050:5050"
    env_file:
      - ./ai-agent-service/.env
    environment:
      - MCP_SERVER_URL=http://js-ai-service:8000/mcp
    networks:
      - appnet
    depends_on:
      js-ai-service:
        condition: service_started
      js-backend:
        condition: service_healthy

networks:
  appnet:
    driver: bridge